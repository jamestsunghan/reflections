How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It allow us to identify the mistakes or changes very easily

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    As a designer, I used to keep track by saving tons of files while editing. An easy access allow me to keep track about what I was doing, and examin the process alongside 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Git : It makes every commit a meaningful version, but it might get a bit risky if an accidents happened between versions
	As for automatically saved, versions at certain moments might not be complete or operable. But we are sure that it is saved by time to time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in coding, files are related, but Google Docs aren't.

How can you use the commands git log and git diff to view the history of files?

    First, use git log to find out all the versions or the versions needed. Second, use git diff to know the exact difference between the lines, whether added or deleted

How might using version control make you more confident to make changes that
could break something?

    it will be easier to identify the mistake we accidentally did. 

Now that you have your workspace set up, what do you want to try using Git for?

    Not quite sure yet.